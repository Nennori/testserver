version: '3'
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php:7.2-fpm
    container_name: app
    restart: unless-stopped
    tty: true
    environment: 
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes: 
      - ./:/var/www
     # - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    #network_mode: "bridge"
    networks:
      - laravel
  #Nginx Service
  webserver:
    image: nginx 
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    volumes:
      - /var/www/hosts:/etc/nginx/conf.d
      - ./:/var/www
      - /var/www/logs:/var/log/nginx
    links:
      - app
      - phppgadmin
    #network_mode: "bridge"
    networks:
      - laravel
  #PostgreSQL Service
  postgres:
    image: postgres:10.15
    container_name: postgres
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment: 
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
      #POSTGRES_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: pgsql
    volumes:
      - /var/www/postgresql:/var/lib/postgresql
    #network_mode: "bridge"
    networks:
      - laravel
  
  #Volumes
  #volumes: 
   # dbdata:
    #  driver: local
  phppgadmin:
    image: dockage/phppgadmin
    restart: always
    links: 
      - postgres:postgres
    ports:
      - 8183:80
    environment:
      PHP_PG_ADMIN_SERVER_HOST: postgres
      PHP_PG_ADMIN_SERVER_DEFAULT_DB: ${DB_DATABASE}
      #POSTGRES_PASSWORD: ${DB_PASSWORD}
      #POSTGRES_USER: ${DB_USERNAME}
      #POSTGRES_DB: ${DB_DATABASE}
      
      #POSTGRES_ROOT_PASSWORD: secret
    #network_mode: "bridge"
    networks:
      - laravel
#Docker Networks
networks:
  laravel:
    driver: bridge
    
